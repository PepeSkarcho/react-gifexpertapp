{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","valueInput","setValueInput","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,UACE,8CACA,6BAAKD,IACL,uBACEQ,KAAO,OACPC,MAAST,EACTU,SArBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,kDACqCC,UAAUH,GAD/C,+DAECI,MAAOF,GAFR,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAfDC,qBAAW,WACVxB,EAAQC,GACPwB,MAAK,SAAAC,GACFC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAGL,CAACpB,IAGIqB,EDlByBM,CAAa3B,GAAhCa,EAFsB,EAE5BN,KAAca,EAFc,EAEdA,QAErB,OAEI,qCACJ,oBAAIJ,UAAU,6CAAd,SAA4DhB,IAC3DoB,GAAW,mBAAGJ,UAAU,wCAAb,0BAET,qBAAKA,UAAU,YAAf,SAEiBH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADIA,EAAIC,aEezBiB,EA9BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,UAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAYvB,OACI,qCACA,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACf,cAAC,EAAD,CAEAA,SAAYA,GADNA,Y,MClB9B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f58a6f77.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [valueInput, setValueInput] = useState('');\r\n\r\n    const handleInputchange = (e) => {\r\n        setValueInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (valueInput.trim().length > 2) {\r\n            setCategories(cats => [valueInput,...cats]);\r\n            setValueInput('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n          <h1>Add Category</h1>  \r\n          <h2>{valueInput}</h2>\r\n          <input\r\n            type = 'text'\r\n            value = {valueInput}\r\n            onChange = {handleInputchange}\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n    //setCategories: PropTypes.element.isRequired\r\n};\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q= ${ encodeURI(category) }&limit=10&api_key=oV40OKe3Mlt3GhjGmW3k5pjUg4Vl8xke`;\r\n     const resp = await fetch( url );\r\n     const {data} = await resp.json(); \r\n\r\n     const gifts = data.map(img => {\r\n         return{\r\n             id: img.id,\r\n             title: img.title,\r\n             url: img.images?.downsized_medium.url\r\n         }\r\n     })\r\n\r\n    \r\n    return gifts;\r\n\r\n }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src = {url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n    \r\n        <>\r\n    <h3 className=\"card animate__animated animate__fadeInDown\">{category}</h3>\r\n    {loading && <p className=\"card animate__animated animate__flash\">Cargando... </p>}\r\n       \r\n       <div className=\"card-grid\">\r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem\r\n                             key = {img.id}\r\n                            {...img}\r\n                             />\r\n                        ))\r\n                    }\r\n        \r\n                </div> \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n   useEffect( () =>{\r\n    getGifs(category)\r\n    .then(imgs => {\r\n        setTimeout(() => {\r\n           \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        }, 3000);\r\n     \r\n    })\r\n   }, [category]) \r\n    \r\n\r\n    return state;\r\n\r\n}\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./Components/AddCategory\";\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Ellie']);\r\n\r\n    /*\r\n    const handleAdd = () =>{\r\n        setCategories([...categories, 'Tommy']);\r\n    }\r\n    */\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h1>GifExpertApp</h1>\r\n        <hr/>\r\n        <AddCategory setCategories = {setCategories}/>\r\n        <ol>\r\n            {\r\n                categories.map(category =>                  \r\n                        <GifGrid \r\n                        key ={category}\r\n                        category = {category}/>\r\n                )\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}